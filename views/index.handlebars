<link rel="stylesheet" href="/styles/index.css" />

</head>

<body>

    <a href="/playlist/{{token}}" class="ml-3">
        <h3 class="mt-3">View Playlist</h3>
    </a>
    <div class="container my-3">
        <h1 class="text-center">Fyre</h1>
        <br>
        <div id="indexImage" class="text-center">
            <div id="artistAndSong">
                <h4 id="artistName"></h4>
                <h4 id="songName"></h4>
            </div>
        </div>
        <div id="buttons" class="my-4">
            <button id="trash-btn" class="btn btn-danger" type="submit"><i class="fas fa-trash-alt"></i></button>
            <button id="fyre-btn" class="btn btn-success" type="submit">&#128293</button>
        </div>
    </div>


    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://sdk.scdn.co/spotify-player.js"></script>
    <script type="text/javascript">

        const songs = ['spotify:track:1rlIrbWboTRGeKfHhgbJRZ', 'spotify:track:3n3Ppam7vgaVa1iaRUc9Lp', 'spotify:track:3twNvmDtFQtAd5gMKedhLD', 'spotify:track:0sf12qNH5qcw8qpgymFOqD', 'spotify:track:6WrI0LAC5M1Rw2MnX2ZvEg', 'spotify:track:2b8fOow8UzyDFAE27YhOZM', 'spotify:track:41L3O37CECZt3N7ziG2z7l', 'spotify:track:1ToprX3cpBiXoAe5eNSk74', 'spotify:track:2Fxmhks0bxGSBdJ92vM42m', 'spotify:track:5Vzpmk27VQ9M77SCkSkERq', 'spotify:track:0uUNN1nSoUx1A4fkDCWDQ7', 'spotify:track:2dpaYNEQHiRxtZbfNsse99', 'spotify:track:1yxgsra98r3qAtxqiGZPiX', 'spotify:track:0QVLQbaphpRgNZ5HHjD1iU', 'spotify:track:4MsxMuC4eDGYv8pT7snwsn', 'spotify:track:4Tb9fdkiPg7m4DZN0WwG1e', 'spotify:track:0arNrzPygksLY2pEbRgBjw', 'spotify:track:3MrRksHupTVEQ7YbA0FsZK', 'spotify:track:2d4e45fmUnguxh6yqC7gNT']

        newSong = '';



        function generateSong() {
            let songId = Math.floor(Math.random() * songs.length)
            for (let i = 0; i < songs.length; i++) {
                if (songId === i) {
                    newSong = songs[i]
                    console.log(newSong)
                    return newSong;
                }
            }
        }

        generateSong();



        window.onSpotifyWebPlaybackSDKReady = () => {
            const token = "{{token}}";
            var player = new Spotify.Player({
                name: 'A Spotify Web SDK Player',
                getOAuthToken: cb => { cb(token); }, volume: 0.1
            });

            player.addListener('ready', ({ device_id }) => {

                let play = ({
                    spotify_uri,
                    playerInstance: {
                        _options: {
                            getOAuthToken,
                            id
                        }
                    }
                }) => {
                    getOAuthToken(access_token => {
                        fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {
                            method: 'PUT',
                            body: JSON.stringify({ uris: [spotify_uri] }),
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer {{token}}`
                            },
                        });
                    });
                };

                play({
                    playerInstance: player,
                    spotify_uri: newSong,
                });
            });

            player.connect();


            let timer = setInterval(function () {
                player.getCurrentState().then(state => {
                    if (!state) {
                        return;
                    }

                    $.ajax({
                        method: 'GET',
                        url: 'https://api.spotify.com/v1/me/player/currently-playing',
                        headers: {
                            'Authorization': `Bearer {{token}}`
                        },
                        success: function (response) {
                            console.log(response)
                            let img = JSON.stringify(response.item.album.images[0].url);
                            let song = response.item.name;
                            let artist = response.item.artists[0].name;
                            let album = response.item.album.name;

                            console.log(artist, song, img)

                            $("#songName").text("Song: " + song)
                            $("#artistName").text("By " + artist)
                            $("#indexImage").css("background-image", "url(" + img + ")");

                            $.ajax({
                                method: 'PUT',
                                url: 'https://api.spotify.com/v1/me/player/shuffle?state=true',
                                headers: {
                                    'Authorization': `Bearer {{token}}`
                                },
                                success: function (data) {
                                    console.log('shuffled')
                                }
                            })



                        }
                    })
                    console.log('Currently Playing');
                    clearInterval(timer)
                });
            }, 500)

            $("#fyre-btn").on("click", function (event) {
                event.preventDefault();
                console.log("click")
                $.ajax({
                    method: 'GET',
                    url: 'https://api.spotify.com/v1/me/player/currently-playing',
                    headers: {
                        'Authorization': `Bearer {{token}}`
                    },
                    success: function (response) {
                        let img = JSON.stringify(response.item.album.images[0].url);
                        let song = response.item.name;
                        let artist = response.item.artists[0].name;
                        let album = response.item.album.name;

                        const newPlaylist = {
                            image: img,
                            title: song,
                            artist: artist,
                            album: album
                        };
                        $.ajax({
                            method: 'POST',
                            url: '/api/new',
                            data: newPlaylist,
                            success: function (data) {
                                console.log('added')
                            }
                        })
                    }
                });

                location.reload();

                /*  player.nextTrack().then(() => {
                      console.log('Skipped to next track!');
                  }); */
            });

            $("#trash-btn").on("click", function (event) {
                console.log('trash click')
                location.reload();


            })

        }

    </script>
</body>